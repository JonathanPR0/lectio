# Conditions:
#   ShouldSetupFilesCDNCustomDomain:
#     Fn::And:
#       - Fn::Not:
#           - Fn::Equals:
#               - ${env:AI_FILES_CDN_DOMAIN_NAME, ''}
#               - ''
#       - Fn::Not:
#           - Fn::Equals:
#               - ${env:AI_FILES_CDN_CERTIFICATE_ARN, ''}
#               - ''
#       - Fn::Not:
#           - Fn::Equals:
#               - ${env:ROUTE53_HOSTED_ZONE_ID, ''}
#               - ''

# Resources:
#   AIFilesCDNOAC:
#     Type: AWS::CloudFront::OriginAccessControl
#     Properties:
#       OriginAccessControlConfig:
#         Name: ${self:service}-${self:provider.stage}-AIFilesCDNOAC
#         Description: OAC for AIFilesBucketCDN
#         OriginAccessControlOriginType: s3
#         SigningBehavior: always
#         SigningProtocol: sigv4

#   AIFilesBucketCDN:
#     Type: AWS::CloudFront::Distribution
#     Properties:
#       DistributionConfig:
#         Enabled: true
#         HttpVersion: http2and3
#         Aliases:
#           Fn::If:
#             - ShouldSetupFilesCDNCustomDomain
#             -
#               - ${env:AI_FILES_CDN_DOMAIN_NAME, ''}
#             - !Ref AWS::NoValue
#         ViewerCertificate:
#           Fn::If:
#           - ShouldSetupFilesCDNCustomDomain
#           -
#             AcmCertificateArn: ${env:AI_FILES_CDN_CERTIFICATE_ARN, ''}
#             MinimumProtocolVersion: TLSv1.2_2021
#             SslSupportMethod: sni-only
#           -
#             CloudFrontDefaultCertificate: true

#         Origins:
#           - Id: S3Origin
#             S3OriginConfig: {}
#             DomainName: !GetAtt AIFilesBucketCDN.RegionalDomainName
#             OriginAccessControlId: !Ref AIFilesCDNOAC
#         DefaultCacheBehavior:
#           TargetOriginId: S3Origin
#           Compress: true
#           ViewerProtocolPolicy: redirect-to-https
#           AllowedMethods:
#             - GET
#             - HEAD
#           # https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html#managed-cache-caching-optimized
#           CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6

#   AIFilesBucketCDNPolicy:
#     Type: AWS::S3::BucketPolicy
#     Properties:
#       Bucket: !Ref AIFilesBucket
#       PolicyDocument:
#         Version: '2008-10-17'
#         Id: PolicyForCloudFrontPrivateContent
#         Statement:
#           - Sid: AllowCloudFrontServicePrincipal
#             Effect: Allow
#             Principal:
#               Service: cloudfront.amazonaws.com
#             Action: s3:GetObject
#             Resource: !Sub '${AIFilesBucket.Arn}/*'
#             Condition:
#               StringEquals:
#                 AWS:SourceArn: !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${AIFilesBucketCDN}'

#   AIFilesCDNCustomDomainDNSRecord:
#     Condition: ShouldSetupFilesCDNCustomDomain
#     Type: AWS::Route53::RecordSet
#     Properties:
#       HostedZoneId: ${env:ROUTE53_HOSTED_ZONE_ID, ''}
#       Type: A
#       Name: ${env:AI_FILES_CDN_DOMAIN_NAME, ''}
#       AliasTarget:
#         # https://docs.aws.amazon.com/pt_br/AWSCloudFormation/latest/TemplateReference/aws-properties-route53-recordset-aliastarget.html#cfn-route53-recordset-aliastarget-hostedzoneid
#         HostedZoneId: Z2FDTNDATAQYW2
#         DNSName: !GetAtt AIFilesBucketCDN.DomainName

Conditions:
  ShouldSetupAIFilesCDNCustomDomain:
    Fn::And:
      - Fn::Not:
          - Fn::Equals:
              - ${env:AI_FILES_CDN_DOMAIN_NAME, ''}
              - ''
      - Fn::Not:
          - Fn::Equals:
              - ${env:AI_FILES_CDN_CERTIFICATE_ARN, ''}
              - ''
      - Fn::Not:
          - Fn::Equals:
              - ${env:ROUTE53_HOSTED_ZONE_ID, ''}
              - ''

Resources:
  AIFilesCDNOAC:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: ${self:service}-${self:provider.stage}-AIFilesCDNOAC
        Description: OAC for AIFilesBucket
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  AIFilesBucketCDN:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        HttpVersion: http2and3
        Aliases:
          Fn::If:
            - ShouldSetupAIFilesCDNCustomDomain
            - 
              - ${env:AI_FILES_CDN_DOMAIN_NAME, ''}
            - !Ref AWS::NoValue
        ViewerCertificate:
          Fn::If:
          - ShouldSetupAIFilesCDNCustomDomain
          -
            AcmCertificateArn: ${env:AI_FILES_CDN_CERTIFICATE_ARN, ''}
            MinimumProtocolVersion: TLSv1.2_2021
            SslSupportMethod: sni-only
          -
            CloudFrontDefaultCertificate: true

        Origins:
          - Id: S3Origin
            S3OriginConfig: {}
            DomainName: !GetAtt AIFilesBucket.RegionalDomainName
            OriginAccessControlId: !Ref AIFilesCDNOAC
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          Compress: true
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
          # https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html#managed-cache-caching-optimized
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6

  AIFilesBucketCDNPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AIFilesBucket
      PolicyDocument:
        Version: '2008-10-17'
        Id: PolicyForCloudFrontPrivateContent
        Statement:
          - Sid: AllowCloudFrontServicePrincipal
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub '${AIFilesBucket.Arn}/*'
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${AIFilesBucketCDN}'

  AIFilesCDNCustomDomainDNSRecord:
    Condition: ShouldSetupAIFilesCDNCustomDomain
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: ${env:ROUTE53_HOSTED_ZONE_ID, ''}
      Type: A
      Name: ${env:AI_FILES_CDN_DOMAIN_NAME, ''}
      AliasTarget:
        # https://docs.aws.amazon.com/pt_br/AWSCloudFormation/latest/TemplateReference/aws-properties-route53-recordset-aliastarget.html#cfn-route53-recordset-aliastarget-hostedzoneid
        HostedZoneId: Z2FDTNDATAQYW2
        DNSName: !GetAtt AIFilesBucketCDN.DomainName